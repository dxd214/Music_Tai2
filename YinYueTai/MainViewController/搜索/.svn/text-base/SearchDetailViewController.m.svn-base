//
//  SearchDetailViewController.m
//  YinYueTai
//
//  Created by Dick on 13-10-30.
//  Copyright (c) 2013年 KSY. All rights reserved.
//

#import "SearchDetailViewController.h"
#import "SearchCell.h"
#import "MVmodel.h"

@interface SearchDetailViewController ()

@end

@implementation SearchDetailViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    _headerView.userInteractionEnabled = YES;
    
    _textField.text = _keyWord;
    if (![_textField.text isEqualToString:@""])
    {
        [self loadMVData];
        [_textField resignFirstResponder];
    }else
    {
        [_textField becomeFirstResponder];
    }
    
    
    _textField.delegate = self;
    
    
    [_mvButton addTarget:self action:@selector(showMVAction) forControlEvents:UIControlEventTouchUpInside];
    [_playListButton addTarget:self action:@selector(showPlayListAction) forControlEvents:UIControlEventTouchUpInside];
    [_artistButton addTarget:self action:@selector(showActistAction) forControlEvents:UIControlEventTouchUpInside];
    
    if([_keyWord isEqualToString:@""])
    {
        if ([_textField.text isEqualToString:@""])
        {
            _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 105, kScreenWidth, kScreenHeight - 105) style:UITableViewStylePlain];
            _tableView.backgroundColor = [UIColor clearColor];
            _tableView.separatorColor = [UIColor colorWithWhite:0.138 alpha:1.000];
            _tableView.showsVerticalScrollIndicator = NO;
            [self.view addSubview:_tableView];
        }else
        {
            [_tableView removeFromSuperview];
        }
        
    }
}

- (void)loadMVData
{
    NSString *jsonRequest = [self.paramDic JSONRepresentation];
    
    NSMutableDictionary *jsonDict = [NSMutableDictionary dictionaryWithObject:jsonRequest forKey:@"deviceinfo"];
    
    [jsonDict setObject:@"20" forKey:@"size"];
    [jsonDict setObject:@"0" forKey:@"offset"];
    
    //请求MV需要的参数
    [jsonDict setObject:_keyWord forKey:@"keyword"];
    [DataService requestWithURL:@"http://mapi.yinyuetai.com/search/video.json" params:jsonDict httpMethod:@"POST" finishBlock:^(id result) {
        NSArray *array = [result objectForKey:@"videos"];
        NSMutableArray *addArray = [NSMutableArray array];
        for (NSDictionary *dic in array) {
            MVmodel *model = [[MVmodel alloc] initWithDataDic:dic];
            [addArray addObject:model];
            [model release];
            [_mvTbView doneLoadingTableViewData];
        }
        
        self.mvData = addArray;
        if (self.mvData.count > 0)
        {
            // 同样的，先确定数据已请求下来了
            [self initMvView];
        }
        
    }];
    
}

- (void)initMvView
{
    if (!_mvTbView)
    {
        _mvTbView  = [[MVTableView alloc] initWithFrame:CGRectMake(0, 105, kScreenWidth, kScreenHeight - 50 - 49) style:UITableViewStylePlain];
        __block SearchDetailViewController *this = self;
        _mvTbView.pullDownBlock = ^(){
            [this loadDown];
        };
        
        _mvTbView.pullUpBlock = ^(){
            
            [this loadUp];
            
        };
        [self.view addSubview:_mvTbView];
        
        _mvTbView.backgroundColor = [UIColor clearColor];
        _mvTbView.separatorColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"horizontalLine"]];
        _mvTbView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    }
    _mvTbView.showArray = self.mvData;
    [_mvTbView performSelector:@selector(reloadData) withObject:nil afterDelay:1];
    
}

- (void)loadUp
{
    [self loadMVData];
}
- (void)loadDown{
    [_mvTbView performSelector:@selector(doneLoadingTableViewData) withObject:nil afterDelay:0.5];
    //     [_mvTableView doneLoadingTableViewData];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)dealloc {
    [_keyWord release];
    [_mvTbView release];
    [_mvData release];
    [_tableView release];
    [_textField release];
    [_mvButton release];
    [_playListButton release];
    [_artistButton release];
    [_headerView release];
    [super dealloc];
}
- (void)viewDidUnload {
    [self setTableView:nil];
    [self setTextField:nil];
    [self setMvButton:nil];
    [self setPlayListButton:nil];
    [self setArtistButton:nil];
    [self setHeaderView:nil];
    [super viewDidUnload];
}

- (void)showMVAction
{
    
}

- (void)showPlayListAction
{
    
}

- (void)showActistAction
{
    
}

#pragma mark - UITableViewDataSource, UITableViewDelegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _defaultSearchArr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"kSearchCell";
    SearchCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil) {
        cell = [[SearchCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
        cell.textLabel.backgroundColor = [UIColor clearColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    cell.text.text = _defaultSearchArr[indexPath.row];
    return cell;
}

- (float)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 40;
}

#pragma mark - UITextFieldDelegate
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    return YES;
}

- (void)textFieldDidEndEditing:(UITextField *)textField
{
    _keyWord = textField.text;
    if (![_keyWord isEqualToString:@""])
    {
        [self loadMVData];
    }
    [_textField resignFirstResponder];
}

- (BOOL)textFieldShouldClear:(UITextField *)textField
{
    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    return YES;
}

- (IBAction)cancelSearchAction:(id)sender
{
    _textField.text = @"";
    [_textField resignFirstResponder];
    //    [_textField becomeFirstResponder];
}
@end
